<?xml version="1.0" encoding="UTF-8"?>

<!--

~~~~~~~~~~~~~~~~~~~~
VNX Sample scenarios
~~~~~~~~~~~~~~~~~~~~

Name:        simple_lxc_ubuntu64
Description: Just one Ubuntu virtual machine connected to a Network named Net0 with address 10.1.0.4. 
             The host has an interface in Net0 with address 10.1.0.1  
             This simple scenario is supposed to be used for testing the different 
             types of virtual machines supported by VNX. You can start several simple_*.xml
             scenarios and test the connectivity among virtual machines and the host, as all
             scenarios share the same "Net0" network.  

This file is part of the Virtual Networks over LinuX (VNX) Project distribution. 
(www: http://www.dit.upm.es/vnx - e-mail: vnx@dit.upm.es) 

Departamento de Ingenieria de Sistemas Telematicos (DIT)
Universidad Politecnica de Madrid
SPAIN

-->


<vnx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="/usr/share/xml/vnx/vnx-2.00.xsd">
  <global>
    <version>2.0</version>
    <scenario_name>nfv3_home_lxc_ubuntu64</scenario_name>
    <automac offset="4"/>
    <!--vm_mgmt type="none" /-->
    <vm_mgmt type="private" network="10.250.0.0" mask="24" offset="12">
       <host_mapping />
    </vm_mgmt> 
    <vm_defaults>
        <console id="0" display="no"/>
        <console id="1" display="yes"/>
    </vm_defaults>
  </global>
    
  <net name="virbr0" mode="virtual_bridge" managed="no"/>
  <net name="AccessNet" mode="openvswitch" managed="no"/>
  <net name="home1net" mode="virtual_bridge" />
  <net name="home2net" mode="virtual_bridge" />
  
  <vm name="h11" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="home1net">
      <ipv4>dhcp</ipv4>
    </if>
    <exec seq="on_boot" type="verbatim">
       # Change MgmtNet and TunnNet interfaces MTU
       ifconfig eth1 mtu 1400
       sed -i -e '/iface eth1 inet static/a \   mtu 1400' /etc/network/interfaces
       echo "alias www='chromium-browser --no-sandbox > /dev/null 2>&amp;1 &amp;'" >> /root/.bash_aliases
    </exec>
    <!-- Get h11 IP -->
    <exec seq="get-h11-ip" type="verbatim">
        hostname -I | awk '{printf "%s\n", $1}{print $2}' | grep 192.168.255
    </exec>
    <!-- Request h11v6 IP -->
    <exec seq="dhclient6-h11" type="verbatim">
        dhclient -6
    </exec>
  </vm>   
  <vm name="h12" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="home1net">
      <ipv4>dhcp</ipv4>
    </if>
    <exec seq="on_boot" type="verbatim">
       # Change MgmtNet and TunnNet interfaces MTU
       ifconfig eth1 mtu 1400
       sed -i -e '/iface eth1 inet static/a \   mtu 1400' /etc/network/interfaces
       echo "alias www='chromium-browser --no-sandbox > /dev/null 2>&amp;1 &amp;'" >> /root/.bash_aliases
    </exec>
    <!-- Get h12 IP -->
    <exec seq="get-h12-ip" type="verbatim">
        hostname -I | awk '{printf "%s\n", $1}{print $2}' | grep 192.168.255
    </exec>
    <!-- Request h12v6 IP -->
    <exec seq="dhclient6-h12" type="verbatim">
        dhclient -6
    </exec>
  </vm> 
  <vm name="brg1" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="home1net">
    </if>
    <if id="2" net="AccessNet">
      <ipv4>10.255.0.2/24</ipv4>
    </if>
    <exec seq="on_boot" type="verbatim">
        service openvswitch-switch start
        sleep 5
        ovs-vsctl add-br br0
        ovs-vsctl add-port br0 eth1
        ovs-vsctl add-port br0 vxlan1 -- set interface vxlan1 type=vxlan options:remote_ip=10.255.0.1
    </exec>
    <!-- Configure QoS -->
    <exec seq="config-QoS-controller-net1" type="verbatim">
      <!-- TO DO
      CAMBIAR ESTA PARTE
        service openvswitch-switch start
        sleep 5
        ovs-vsctl add-br br0
        ovs-vsctl add-port br0 eth1
        ovs-vsctl add-port br0 vxlan1  set interface vxlan1 type=vxlan options:remote_ip=10.255.0.1
      HASTA AQUI >>>

        sed '/OFPFlowMod(/,/)/s/)/, table_id=1)/' /usr/lib/python3/dist-packages/ryu/app/simple_switch_13.py > qos_simple_switch_13.py 
        ryu-manager ryu.app.rest_qos ryu.app.rest_conf_switch ./qos_simple_switch_13.py
        ovs-vsctl set bridge br0 protocols=OpenFlow10,OpenFlow12,OpenFlow13
        ovs-vsctl set-fail-mode br0 secure
        ovs-vsctl set bridge br0 other-config:datapath-id=0000000000000001
        ovs-vsctl set-controller br0 tcp:127.0.0.1:6633
        ovs-vsctl set-manager ptcp:6632
      -->
    </exec>
    <exec seq="config-QoS-rules-net1" type="verbatim">
      <!--
    curl -X PUT -d '"tcp:127.0.0.1:6632"' http://127.0.0.1:8080/v1.0/conf/switches/0000000000000001/ovsdb_addr 
    curl -X POST -d '{"port_name": "vxlan1", "type": "linux-htb", "max_rate": "6000000", "queues": [{"max_rate": "2000000"}, {"min_rate": "2000000"}]}' http://127.0.0.1:8080/qos/queue/0000000000000001 
    curl -X POST -d '{"match": {"nw_src": "192.168.255.20", "nw_proto": "UDP", "udp_dst": "5002"}, "actions":{"queue": "1"}}' http://127.0.0.1:8080/qos/rules/0000000000000001 
    curl -X POST -d '{"match": {"nw_src": "192.168.255.21", "nw_proto": "UDP", "udp_dst": "5002"}, "actions":{"queue": "0"}}' http://127.0.0.1:8080/qos/rules/0000000000000001
    -->
    </exec>
  </vm>
  <vm name="h21" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="home2net">
      <ipv4>dhcp</ipv4>
    </if>
    <exec seq="on_boot" type="verbatim">
       # Change MgmtNet and TunnNet interfaces MTU
       ifconfig eth1 mtu 1400
       sed -i -e '/iface eth1 inet static/a \   mtu 1400' /etc/network/interfaces
       echo "alias www='chromium-browser --no-sandbox > /dev/null 2>&amp;1 &amp;'" >> /root/.bash_aliases
    </exec>
    <!-- Get h21 IP -->
    <exec seq="get-h21-ip" type="verbatim">
        hostname -I | awk '{printf "%s\n", $1}{print $2}' | grep 192.168.255
    </exec>
    <!-- Request h21v6 IP -->
    <exec seq="dhclient6-h21" type="verbatim">
        dhclient -6
    </exec>
  </vm>   
  <vm name="h22" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="home2net">
      <ipv4>dhcp</ipv4>
    </if>
    <exec seq="on_boot" type="verbatim">
       # Change MgmtNet and TunnNet interfaces MTU
       ifconfig eth1 mtu 1400
       sed -i -e '/iface eth1 inet static/a \   mtu 1400' /etc/network/interfaces
       echo "alias www='chromium-browser --no-sandbox > /dev/null 2>&amp;1 &amp;'" >> /root/.bash_aliases
    </exec>
    <!-- Get h22 IP -->
    <exec seq="get-h22-ip" type="verbatim">
        hostname -I | awk '{printf "%s\n", $1}{print $2}' | grep 192.168.255
    </exec>
    <!-- Request h22v6 IP -->
    <exec seq="dhclient6-h22" type="verbatim">
        dhclient -6
    </exec>
  </vm> 
  <vm name="brg2" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="home2net">
    </if>
    <if id="2" net="AccessNet">
      <ipv4>10.255.0.4/24</ipv4>
    </if>
    <exec seq="on_boot" type="verbatim">
        service openvswitch-switch start
        sleep 5
        ovs-vsctl add-br br0
        ovs-vsctl add-port br0 eth1
        ovs-vsctl add-port br0 vxlan1 -- set interface vxlan1 type=vxlan options:remote_ip=10.255.0.3
    </exec>
    <!-- Configure QoS -->
    <exec seq="config-QoS-controller-net2" type="verbatim">
      <!-- TO DO
      CAMBIAR ESTA PARTE
        service openvswitch-switch start
        sleep 5
        ovs-vsctl add-br br0
        ovs-vsctl add-port br0 eth1
        ovs-vsctl add-port br0 vxlan1  set interface vxlan1 type=vxlan options:remote_ip=10.255.0.3
      HASTA AQUI >>>
        sed '/OFPFlowMod(/,/)/s/)/, table_id=1)/' /usr/lib/python3/dist-packages/ryu/app/simple_switch_13.py > qos_simple_switch_13.py 
        ryu-manager ryu.app.rest_qos ryu.app.rest_conf_switch ./qos_simple_switch_13.py
        ovs-vsctl set bridge br0 protocols=OpenFlow10,OpenFlow12,OpenFlow13
        ovs-vsctl set-fail-mode br0 secure
        ovs-vsctl set bridge br0 other-config:datapath-id=0000000000000001
        ovs-vsctl set-controller br0 tcp:127.0.0.1:6633
        ovs-vsctl set-manager ptcp:6632
      -->
    </exec>
    <exec seq="config-QoS-rules-net2" type="verbatim">
      <!--
    curl -X PUT -d '"tcp:127.0.0.1:6632"' http://127.0.0.1:8080/v1.0/conf/switches/0000000000000001/ovsdb_addr 
    curl -X POST -d '{"port_name": "vxlan1", "type": "linux-htb", "max_rate": "6000000", "queues": [{"max_rate": "2000000"}, {"min_rate": "2000000"}]}' http://127.0.0.1:8080/qos/queue/0000000000000001 
    curl -X POST -d '{"match": {"nw_src": "192.168.255.20", "nw_proto": "UDP", "udp_dst": "5002"}, "actions":{"queue": "1"}}' http://127.0.0.1:8080/qos/rules/0000000000000001 
    curl -X POST -d '{"match": {"nw_src": "192.168.255.21", "nw_proto": "UDP", "udp_dst": "5002"}, "actions":{"queue": "0"}}' http://127.0.0.1:8080/qos/rules/0000000000000001
    -->
    </exec>

  </vm>
</vnx>
